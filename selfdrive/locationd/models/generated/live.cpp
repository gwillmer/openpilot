#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2201508260629983479) {
   out_2201508260629983479[0] = 0;
   out_2201508260629983479[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2201508260629983479[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2201508260629983479[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2201508260629983479[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2201508260629983479[5] = -sin(in_vec[1]);
   out_2201508260629983479[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2201508260629983479[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2201508260629983479[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2201508260629983479[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2201508260629983479[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2201508260629983479[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2201508260629983479[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2201508260629983479[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2201508260629983479[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2201508260629983479[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2201508260629983479[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2201508260629983479[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3850416414583513383) {
   out_3850416414583513383[0] = delta_x[0] + nom_x[0];
   out_3850416414583513383[1] = delta_x[1] + nom_x[1];
   out_3850416414583513383[2] = delta_x[2] + nom_x[2];
   out_3850416414583513383[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3850416414583513383[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3850416414583513383[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3850416414583513383[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3850416414583513383[7] = delta_x[6] + nom_x[7];
   out_3850416414583513383[8] = delta_x[7] + nom_x[8];
   out_3850416414583513383[9] = delta_x[8] + nom_x[9];
   out_3850416414583513383[10] = delta_x[9] + nom_x[10];
   out_3850416414583513383[11] = delta_x[10] + nom_x[11];
   out_3850416414583513383[12] = delta_x[11] + nom_x[12];
   out_3850416414583513383[13] = delta_x[12] + nom_x[13];
   out_3850416414583513383[14] = delta_x[13] + nom_x[14];
   out_3850416414583513383[15] = delta_x[14] + nom_x[15];
   out_3850416414583513383[16] = delta_x[15] + nom_x[16];
   out_3850416414583513383[17] = delta_x[16] + nom_x[17];
   out_3850416414583513383[18] = delta_x[17] + nom_x[18];
   out_3850416414583513383[19] = delta_x[18] + nom_x[19];
   out_3850416414583513383[20] = delta_x[19] + nom_x[20];
   out_3850416414583513383[21] = delta_x[20] + nom_x[21];
   out_3850416414583513383[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1892947755982964602) {
   out_1892947755982964602[0] = -nom_x[0] + true_x[0];
   out_1892947755982964602[1] = -nom_x[1] + true_x[1];
   out_1892947755982964602[2] = -nom_x[2] + true_x[2];
   out_1892947755982964602[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1892947755982964602[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1892947755982964602[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1892947755982964602[6] = -nom_x[7] + true_x[7];
   out_1892947755982964602[7] = -nom_x[8] + true_x[8];
   out_1892947755982964602[8] = -nom_x[9] + true_x[9];
   out_1892947755982964602[9] = -nom_x[10] + true_x[10];
   out_1892947755982964602[10] = -nom_x[11] + true_x[11];
   out_1892947755982964602[11] = -nom_x[12] + true_x[12];
   out_1892947755982964602[12] = -nom_x[13] + true_x[13];
   out_1892947755982964602[13] = -nom_x[14] + true_x[14];
   out_1892947755982964602[14] = -nom_x[15] + true_x[15];
   out_1892947755982964602[15] = -nom_x[16] + true_x[16];
   out_1892947755982964602[16] = -nom_x[17] + true_x[17];
   out_1892947755982964602[17] = -nom_x[18] + true_x[18];
   out_1892947755982964602[18] = -nom_x[19] + true_x[19];
   out_1892947755982964602[19] = -nom_x[20] + true_x[20];
   out_1892947755982964602[20] = -nom_x[21] + true_x[21];
   out_1892947755982964602[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_7780851748543260142) {
   out_7780851748543260142[0] = 1.0;
   out_7780851748543260142[1] = 0.0;
   out_7780851748543260142[2] = 0.0;
   out_7780851748543260142[3] = 0.0;
   out_7780851748543260142[4] = 0.0;
   out_7780851748543260142[5] = 0.0;
   out_7780851748543260142[6] = 0.0;
   out_7780851748543260142[7] = 0.0;
   out_7780851748543260142[8] = 0.0;
   out_7780851748543260142[9] = 0.0;
   out_7780851748543260142[10] = 0.0;
   out_7780851748543260142[11] = 0.0;
   out_7780851748543260142[12] = 0.0;
   out_7780851748543260142[13] = 0.0;
   out_7780851748543260142[14] = 0.0;
   out_7780851748543260142[15] = 0.0;
   out_7780851748543260142[16] = 0.0;
   out_7780851748543260142[17] = 0.0;
   out_7780851748543260142[18] = 0.0;
   out_7780851748543260142[19] = 0.0;
   out_7780851748543260142[20] = 0.0;
   out_7780851748543260142[21] = 0.0;
   out_7780851748543260142[22] = 0.0;
   out_7780851748543260142[23] = 1.0;
   out_7780851748543260142[24] = 0.0;
   out_7780851748543260142[25] = 0.0;
   out_7780851748543260142[26] = 0.0;
   out_7780851748543260142[27] = 0.0;
   out_7780851748543260142[28] = 0.0;
   out_7780851748543260142[29] = 0.0;
   out_7780851748543260142[30] = 0.0;
   out_7780851748543260142[31] = 0.0;
   out_7780851748543260142[32] = 0.0;
   out_7780851748543260142[33] = 0.0;
   out_7780851748543260142[34] = 0.0;
   out_7780851748543260142[35] = 0.0;
   out_7780851748543260142[36] = 0.0;
   out_7780851748543260142[37] = 0.0;
   out_7780851748543260142[38] = 0.0;
   out_7780851748543260142[39] = 0.0;
   out_7780851748543260142[40] = 0.0;
   out_7780851748543260142[41] = 0.0;
   out_7780851748543260142[42] = 0.0;
   out_7780851748543260142[43] = 0.0;
   out_7780851748543260142[44] = 0.0;
   out_7780851748543260142[45] = 0.0;
   out_7780851748543260142[46] = 1.0;
   out_7780851748543260142[47] = 0.0;
   out_7780851748543260142[48] = 0.0;
   out_7780851748543260142[49] = 0.0;
   out_7780851748543260142[50] = 0.0;
   out_7780851748543260142[51] = 0.0;
   out_7780851748543260142[52] = 0.0;
   out_7780851748543260142[53] = 0.0;
   out_7780851748543260142[54] = 0.0;
   out_7780851748543260142[55] = 0.0;
   out_7780851748543260142[56] = 0.0;
   out_7780851748543260142[57] = 0.0;
   out_7780851748543260142[58] = 0.0;
   out_7780851748543260142[59] = 0.0;
   out_7780851748543260142[60] = 0.0;
   out_7780851748543260142[61] = 0.0;
   out_7780851748543260142[62] = 0.0;
   out_7780851748543260142[63] = 0.0;
   out_7780851748543260142[64] = 0.0;
   out_7780851748543260142[65] = 0.0;
   out_7780851748543260142[66] = 0.0;
   out_7780851748543260142[67] = 0.0;
   out_7780851748543260142[68] = 0.0;
   out_7780851748543260142[69] = -0.5*state[4];
   out_7780851748543260142[70] = -0.5*state[5];
   out_7780851748543260142[71] = -0.5*state[6];
   out_7780851748543260142[72] = 0.0;
   out_7780851748543260142[73] = 0.0;
   out_7780851748543260142[74] = 0.0;
   out_7780851748543260142[75] = 0.0;
   out_7780851748543260142[76] = 0.0;
   out_7780851748543260142[77] = 0.0;
   out_7780851748543260142[78] = 0.0;
   out_7780851748543260142[79] = 0.0;
   out_7780851748543260142[80] = 0.0;
   out_7780851748543260142[81] = 0.0;
   out_7780851748543260142[82] = 0.0;
   out_7780851748543260142[83] = 0.0;
   out_7780851748543260142[84] = 0.0;
   out_7780851748543260142[85] = 0.0;
   out_7780851748543260142[86] = 0.0;
   out_7780851748543260142[87] = 0.0;
   out_7780851748543260142[88] = 0.0;
   out_7780851748543260142[89] = 0.0;
   out_7780851748543260142[90] = 0.0;
   out_7780851748543260142[91] = 0.5*state[3];
   out_7780851748543260142[92] = 0.5*state[6];
   out_7780851748543260142[93] = -0.5*state[5];
   out_7780851748543260142[94] = 0.0;
   out_7780851748543260142[95] = 0.0;
   out_7780851748543260142[96] = 0.0;
   out_7780851748543260142[97] = 0.0;
   out_7780851748543260142[98] = 0.0;
   out_7780851748543260142[99] = 0.0;
   out_7780851748543260142[100] = 0.0;
   out_7780851748543260142[101] = 0.0;
   out_7780851748543260142[102] = 0.0;
   out_7780851748543260142[103] = 0.0;
   out_7780851748543260142[104] = 0.0;
   out_7780851748543260142[105] = 0.0;
   out_7780851748543260142[106] = 0.0;
   out_7780851748543260142[107] = 0.0;
   out_7780851748543260142[108] = 0.0;
   out_7780851748543260142[109] = 0.0;
   out_7780851748543260142[110] = 0.0;
   out_7780851748543260142[111] = 0.0;
   out_7780851748543260142[112] = 0.0;
   out_7780851748543260142[113] = -0.5*state[6];
   out_7780851748543260142[114] = 0.5*state[3];
   out_7780851748543260142[115] = 0.5*state[4];
   out_7780851748543260142[116] = 0.0;
   out_7780851748543260142[117] = 0.0;
   out_7780851748543260142[118] = 0.0;
   out_7780851748543260142[119] = 0.0;
   out_7780851748543260142[120] = 0.0;
   out_7780851748543260142[121] = 0.0;
   out_7780851748543260142[122] = 0.0;
   out_7780851748543260142[123] = 0.0;
   out_7780851748543260142[124] = 0.0;
   out_7780851748543260142[125] = 0.0;
   out_7780851748543260142[126] = 0.0;
   out_7780851748543260142[127] = 0.0;
   out_7780851748543260142[128] = 0.0;
   out_7780851748543260142[129] = 0.0;
   out_7780851748543260142[130] = 0.0;
   out_7780851748543260142[131] = 0.0;
   out_7780851748543260142[132] = 0.0;
   out_7780851748543260142[133] = 0.0;
   out_7780851748543260142[134] = 0.0;
   out_7780851748543260142[135] = 0.5*state[5];
   out_7780851748543260142[136] = -0.5*state[4];
   out_7780851748543260142[137] = 0.5*state[3];
   out_7780851748543260142[138] = 0.0;
   out_7780851748543260142[139] = 0.0;
   out_7780851748543260142[140] = 0.0;
   out_7780851748543260142[141] = 0.0;
   out_7780851748543260142[142] = 0.0;
   out_7780851748543260142[143] = 0.0;
   out_7780851748543260142[144] = 0.0;
   out_7780851748543260142[145] = 0.0;
   out_7780851748543260142[146] = 0.0;
   out_7780851748543260142[147] = 0.0;
   out_7780851748543260142[148] = 0.0;
   out_7780851748543260142[149] = 0.0;
   out_7780851748543260142[150] = 0.0;
   out_7780851748543260142[151] = 0.0;
   out_7780851748543260142[152] = 0.0;
   out_7780851748543260142[153] = 0.0;
   out_7780851748543260142[154] = 0.0;
   out_7780851748543260142[155] = 0.0;
   out_7780851748543260142[156] = 0.0;
   out_7780851748543260142[157] = 0.0;
   out_7780851748543260142[158] = 0.0;
   out_7780851748543260142[159] = 0.0;
   out_7780851748543260142[160] = 1.0;
   out_7780851748543260142[161] = 0.0;
   out_7780851748543260142[162] = 0.0;
   out_7780851748543260142[163] = 0.0;
   out_7780851748543260142[164] = 0.0;
   out_7780851748543260142[165] = 0.0;
   out_7780851748543260142[166] = 0.0;
   out_7780851748543260142[167] = 0.0;
   out_7780851748543260142[168] = 0.0;
   out_7780851748543260142[169] = 0.0;
   out_7780851748543260142[170] = 0.0;
   out_7780851748543260142[171] = 0.0;
   out_7780851748543260142[172] = 0.0;
   out_7780851748543260142[173] = 0.0;
   out_7780851748543260142[174] = 0.0;
   out_7780851748543260142[175] = 0.0;
   out_7780851748543260142[176] = 0.0;
   out_7780851748543260142[177] = 0.0;
   out_7780851748543260142[178] = 0.0;
   out_7780851748543260142[179] = 0.0;
   out_7780851748543260142[180] = 0.0;
   out_7780851748543260142[181] = 0.0;
   out_7780851748543260142[182] = 0.0;
   out_7780851748543260142[183] = 1.0;
   out_7780851748543260142[184] = 0.0;
   out_7780851748543260142[185] = 0.0;
   out_7780851748543260142[186] = 0.0;
   out_7780851748543260142[187] = 0.0;
   out_7780851748543260142[188] = 0.0;
   out_7780851748543260142[189] = 0.0;
   out_7780851748543260142[190] = 0.0;
   out_7780851748543260142[191] = 0.0;
   out_7780851748543260142[192] = 0.0;
   out_7780851748543260142[193] = 0.0;
   out_7780851748543260142[194] = 0.0;
   out_7780851748543260142[195] = 0.0;
   out_7780851748543260142[196] = 0.0;
   out_7780851748543260142[197] = 0.0;
   out_7780851748543260142[198] = 0.0;
   out_7780851748543260142[199] = 0.0;
   out_7780851748543260142[200] = 0.0;
   out_7780851748543260142[201] = 0.0;
   out_7780851748543260142[202] = 0.0;
   out_7780851748543260142[203] = 0.0;
   out_7780851748543260142[204] = 0.0;
   out_7780851748543260142[205] = 0.0;
   out_7780851748543260142[206] = 1.0;
   out_7780851748543260142[207] = 0.0;
   out_7780851748543260142[208] = 0.0;
   out_7780851748543260142[209] = 0.0;
   out_7780851748543260142[210] = 0.0;
   out_7780851748543260142[211] = 0.0;
   out_7780851748543260142[212] = 0.0;
   out_7780851748543260142[213] = 0.0;
   out_7780851748543260142[214] = 0.0;
   out_7780851748543260142[215] = 0.0;
   out_7780851748543260142[216] = 0.0;
   out_7780851748543260142[217] = 0.0;
   out_7780851748543260142[218] = 0.0;
   out_7780851748543260142[219] = 0.0;
   out_7780851748543260142[220] = 0.0;
   out_7780851748543260142[221] = 0.0;
   out_7780851748543260142[222] = 0.0;
   out_7780851748543260142[223] = 0.0;
   out_7780851748543260142[224] = 0.0;
   out_7780851748543260142[225] = 0.0;
   out_7780851748543260142[226] = 0.0;
   out_7780851748543260142[227] = 0.0;
   out_7780851748543260142[228] = 0.0;
   out_7780851748543260142[229] = 1.0;
   out_7780851748543260142[230] = 0.0;
   out_7780851748543260142[231] = 0.0;
   out_7780851748543260142[232] = 0.0;
   out_7780851748543260142[233] = 0.0;
   out_7780851748543260142[234] = 0.0;
   out_7780851748543260142[235] = 0.0;
   out_7780851748543260142[236] = 0.0;
   out_7780851748543260142[237] = 0.0;
   out_7780851748543260142[238] = 0.0;
   out_7780851748543260142[239] = 0.0;
   out_7780851748543260142[240] = 0.0;
   out_7780851748543260142[241] = 0.0;
   out_7780851748543260142[242] = 0.0;
   out_7780851748543260142[243] = 0.0;
   out_7780851748543260142[244] = 0.0;
   out_7780851748543260142[245] = 0.0;
   out_7780851748543260142[246] = 0.0;
   out_7780851748543260142[247] = 0.0;
   out_7780851748543260142[248] = 0.0;
   out_7780851748543260142[249] = 0.0;
   out_7780851748543260142[250] = 0.0;
   out_7780851748543260142[251] = 0.0;
   out_7780851748543260142[252] = 1.0;
   out_7780851748543260142[253] = 0.0;
   out_7780851748543260142[254] = 0.0;
   out_7780851748543260142[255] = 0.0;
   out_7780851748543260142[256] = 0.0;
   out_7780851748543260142[257] = 0.0;
   out_7780851748543260142[258] = 0.0;
   out_7780851748543260142[259] = 0.0;
   out_7780851748543260142[260] = 0.0;
   out_7780851748543260142[261] = 0.0;
   out_7780851748543260142[262] = 0.0;
   out_7780851748543260142[263] = 0.0;
   out_7780851748543260142[264] = 0.0;
   out_7780851748543260142[265] = 0.0;
   out_7780851748543260142[266] = 0.0;
   out_7780851748543260142[267] = 0.0;
   out_7780851748543260142[268] = 0.0;
   out_7780851748543260142[269] = 0.0;
   out_7780851748543260142[270] = 0.0;
   out_7780851748543260142[271] = 0.0;
   out_7780851748543260142[272] = 0.0;
   out_7780851748543260142[273] = 0.0;
   out_7780851748543260142[274] = 0.0;
   out_7780851748543260142[275] = 1.0;
   out_7780851748543260142[276] = 0.0;
   out_7780851748543260142[277] = 0.0;
   out_7780851748543260142[278] = 0.0;
   out_7780851748543260142[279] = 0.0;
   out_7780851748543260142[280] = 0.0;
   out_7780851748543260142[281] = 0.0;
   out_7780851748543260142[282] = 0.0;
   out_7780851748543260142[283] = 0.0;
   out_7780851748543260142[284] = 0.0;
   out_7780851748543260142[285] = 0.0;
   out_7780851748543260142[286] = 0.0;
   out_7780851748543260142[287] = 0.0;
   out_7780851748543260142[288] = 0.0;
   out_7780851748543260142[289] = 0.0;
   out_7780851748543260142[290] = 0.0;
   out_7780851748543260142[291] = 0.0;
   out_7780851748543260142[292] = 0.0;
   out_7780851748543260142[293] = 0.0;
   out_7780851748543260142[294] = 0.0;
   out_7780851748543260142[295] = 0.0;
   out_7780851748543260142[296] = 0.0;
   out_7780851748543260142[297] = 0.0;
   out_7780851748543260142[298] = 1.0;
   out_7780851748543260142[299] = 0.0;
   out_7780851748543260142[300] = 0.0;
   out_7780851748543260142[301] = 0.0;
   out_7780851748543260142[302] = 0.0;
   out_7780851748543260142[303] = 0.0;
   out_7780851748543260142[304] = 0.0;
   out_7780851748543260142[305] = 0.0;
   out_7780851748543260142[306] = 0.0;
   out_7780851748543260142[307] = 0.0;
   out_7780851748543260142[308] = 0.0;
   out_7780851748543260142[309] = 0.0;
   out_7780851748543260142[310] = 0.0;
   out_7780851748543260142[311] = 0.0;
   out_7780851748543260142[312] = 0.0;
   out_7780851748543260142[313] = 0.0;
   out_7780851748543260142[314] = 0.0;
   out_7780851748543260142[315] = 0.0;
   out_7780851748543260142[316] = 0.0;
   out_7780851748543260142[317] = 0.0;
   out_7780851748543260142[318] = 0.0;
   out_7780851748543260142[319] = 0.0;
   out_7780851748543260142[320] = 0.0;
   out_7780851748543260142[321] = 1.0;
   out_7780851748543260142[322] = 0.0;
   out_7780851748543260142[323] = 0.0;
   out_7780851748543260142[324] = 0.0;
   out_7780851748543260142[325] = 0.0;
   out_7780851748543260142[326] = 0.0;
   out_7780851748543260142[327] = 0.0;
   out_7780851748543260142[328] = 0.0;
   out_7780851748543260142[329] = 0.0;
   out_7780851748543260142[330] = 0.0;
   out_7780851748543260142[331] = 0.0;
   out_7780851748543260142[332] = 0.0;
   out_7780851748543260142[333] = 0.0;
   out_7780851748543260142[334] = 0.0;
   out_7780851748543260142[335] = 0.0;
   out_7780851748543260142[336] = 0.0;
   out_7780851748543260142[337] = 0.0;
   out_7780851748543260142[338] = 0.0;
   out_7780851748543260142[339] = 0.0;
   out_7780851748543260142[340] = 0.0;
   out_7780851748543260142[341] = 0.0;
   out_7780851748543260142[342] = 0.0;
   out_7780851748543260142[343] = 0.0;
   out_7780851748543260142[344] = 1.0;
   out_7780851748543260142[345] = 0.0;
   out_7780851748543260142[346] = 0.0;
   out_7780851748543260142[347] = 0.0;
   out_7780851748543260142[348] = 0.0;
   out_7780851748543260142[349] = 0.0;
   out_7780851748543260142[350] = 0.0;
   out_7780851748543260142[351] = 0.0;
   out_7780851748543260142[352] = 0.0;
   out_7780851748543260142[353] = 0.0;
   out_7780851748543260142[354] = 0.0;
   out_7780851748543260142[355] = 0.0;
   out_7780851748543260142[356] = 0.0;
   out_7780851748543260142[357] = 0.0;
   out_7780851748543260142[358] = 0.0;
   out_7780851748543260142[359] = 0.0;
   out_7780851748543260142[360] = 0.0;
   out_7780851748543260142[361] = 0.0;
   out_7780851748543260142[362] = 0.0;
   out_7780851748543260142[363] = 0.0;
   out_7780851748543260142[364] = 0.0;
   out_7780851748543260142[365] = 0.0;
   out_7780851748543260142[366] = 0.0;
   out_7780851748543260142[367] = 1.0;
   out_7780851748543260142[368] = 0.0;
   out_7780851748543260142[369] = 0.0;
   out_7780851748543260142[370] = 0.0;
   out_7780851748543260142[371] = 0.0;
   out_7780851748543260142[372] = 0.0;
   out_7780851748543260142[373] = 0.0;
   out_7780851748543260142[374] = 0.0;
   out_7780851748543260142[375] = 0.0;
   out_7780851748543260142[376] = 0.0;
   out_7780851748543260142[377] = 0.0;
   out_7780851748543260142[378] = 0.0;
   out_7780851748543260142[379] = 0.0;
   out_7780851748543260142[380] = 0.0;
   out_7780851748543260142[381] = 0.0;
   out_7780851748543260142[382] = 0.0;
   out_7780851748543260142[383] = 0.0;
   out_7780851748543260142[384] = 0.0;
   out_7780851748543260142[385] = 0.0;
   out_7780851748543260142[386] = 0.0;
   out_7780851748543260142[387] = 0.0;
   out_7780851748543260142[388] = 0.0;
   out_7780851748543260142[389] = 0.0;
   out_7780851748543260142[390] = 1.0;
   out_7780851748543260142[391] = 0.0;
   out_7780851748543260142[392] = 0.0;
   out_7780851748543260142[393] = 0.0;
   out_7780851748543260142[394] = 0.0;
   out_7780851748543260142[395] = 0.0;
   out_7780851748543260142[396] = 0.0;
   out_7780851748543260142[397] = 0.0;
   out_7780851748543260142[398] = 0.0;
   out_7780851748543260142[399] = 0.0;
   out_7780851748543260142[400] = 0.0;
   out_7780851748543260142[401] = 0.0;
   out_7780851748543260142[402] = 0.0;
   out_7780851748543260142[403] = 0.0;
   out_7780851748543260142[404] = 0.0;
   out_7780851748543260142[405] = 0.0;
   out_7780851748543260142[406] = 0.0;
   out_7780851748543260142[407] = 0.0;
   out_7780851748543260142[408] = 0.0;
   out_7780851748543260142[409] = 0.0;
   out_7780851748543260142[410] = 0.0;
   out_7780851748543260142[411] = 0.0;
   out_7780851748543260142[412] = 0.0;
   out_7780851748543260142[413] = 1.0;
   out_7780851748543260142[414] = 0.0;
   out_7780851748543260142[415] = 0.0;
   out_7780851748543260142[416] = 0.0;
   out_7780851748543260142[417] = 0.0;
   out_7780851748543260142[418] = 0.0;
   out_7780851748543260142[419] = 0.0;
   out_7780851748543260142[420] = 0.0;
   out_7780851748543260142[421] = 0.0;
   out_7780851748543260142[422] = 0.0;
   out_7780851748543260142[423] = 0.0;
   out_7780851748543260142[424] = 0.0;
   out_7780851748543260142[425] = 0.0;
   out_7780851748543260142[426] = 0.0;
   out_7780851748543260142[427] = 0.0;
   out_7780851748543260142[428] = 0.0;
   out_7780851748543260142[429] = 0.0;
   out_7780851748543260142[430] = 0.0;
   out_7780851748543260142[431] = 0.0;
   out_7780851748543260142[432] = 0.0;
   out_7780851748543260142[433] = 0.0;
   out_7780851748543260142[434] = 0.0;
   out_7780851748543260142[435] = 0.0;
   out_7780851748543260142[436] = 1.0;
   out_7780851748543260142[437] = 0.0;
   out_7780851748543260142[438] = 0.0;
   out_7780851748543260142[439] = 0.0;
   out_7780851748543260142[440] = 0.0;
   out_7780851748543260142[441] = 0.0;
   out_7780851748543260142[442] = 0.0;
   out_7780851748543260142[443] = 0.0;
   out_7780851748543260142[444] = 0.0;
   out_7780851748543260142[445] = 0.0;
   out_7780851748543260142[446] = 0.0;
   out_7780851748543260142[447] = 0.0;
   out_7780851748543260142[448] = 0.0;
   out_7780851748543260142[449] = 0.0;
   out_7780851748543260142[450] = 0.0;
   out_7780851748543260142[451] = 0.0;
   out_7780851748543260142[452] = 0.0;
   out_7780851748543260142[453] = 0.0;
   out_7780851748543260142[454] = 0.0;
   out_7780851748543260142[455] = 0.0;
   out_7780851748543260142[456] = 0.0;
   out_7780851748543260142[457] = 0.0;
   out_7780851748543260142[458] = 0.0;
   out_7780851748543260142[459] = 1.0;
   out_7780851748543260142[460] = 0.0;
   out_7780851748543260142[461] = 0.0;
   out_7780851748543260142[462] = 0.0;
   out_7780851748543260142[463] = 0.0;
   out_7780851748543260142[464] = 0.0;
   out_7780851748543260142[465] = 0.0;
   out_7780851748543260142[466] = 0.0;
   out_7780851748543260142[467] = 0.0;
   out_7780851748543260142[468] = 0.0;
   out_7780851748543260142[469] = 0.0;
   out_7780851748543260142[470] = 0.0;
   out_7780851748543260142[471] = 0.0;
   out_7780851748543260142[472] = 0.0;
   out_7780851748543260142[473] = 0.0;
   out_7780851748543260142[474] = 0.0;
   out_7780851748543260142[475] = 0.0;
   out_7780851748543260142[476] = 0.0;
   out_7780851748543260142[477] = 0.0;
   out_7780851748543260142[478] = 0.0;
   out_7780851748543260142[479] = 0.0;
   out_7780851748543260142[480] = 0.0;
   out_7780851748543260142[481] = 0.0;
   out_7780851748543260142[482] = 1.0;
   out_7780851748543260142[483] = 0.0;
   out_7780851748543260142[484] = 0.0;
   out_7780851748543260142[485] = 0.0;
   out_7780851748543260142[486] = 0.0;
   out_7780851748543260142[487] = 0.0;
   out_7780851748543260142[488] = 0.0;
   out_7780851748543260142[489] = 0.0;
   out_7780851748543260142[490] = 0.0;
   out_7780851748543260142[491] = 0.0;
   out_7780851748543260142[492] = 0.0;
   out_7780851748543260142[493] = 0.0;
   out_7780851748543260142[494] = 0.0;
   out_7780851748543260142[495] = 0.0;
   out_7780851748543260142[496] = 0.0;
   out_7780851748543260142[497] = 0.0;
   out_7780851748543260142[498] = 0.0;
   out_7780851748543260142[499] = 0.0;
   out_7780851748543260142[500] = 0.0;
   out_7780851748543260142[501] = 0.0;
   out_7780851748543260142[502] = 0.0;
   out_7780851748543260142[503] = 0.0;
   out_7780851748543260142[504] = 0.0;
   out_7780851748543260142[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_3769333781718526477) {
   out_3769333781718526477[0] = dt*state[7] + state[0];
   out_3769333781718526477[1] = dt*state[8] + state[1];
   out_3769333781718526477[2] = dt*state[9] + state[2];
   out_3769333781718526477[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3769333781718526477[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3769333781718526477[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3769333781718526477[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3769333781718526477[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_3769333781718526477[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_3769333781718526477[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_3769333781718526477[10] = state[10];
   out_3769333781718526477[11] = state[11];
   out_3769333781718526477[12] = state[12];
   out_3769333781718526477[13] = state[13];
   out_3769333781718526477[14] = state[14];
   out_3769333781718526477[15] = state[15];
   out_3769333781718526477[16] = state[16];
   out_3769333781718526477[17] = state[17];
   out_3769333781718526477[18] = state[18];
   out_3769333781718526477[19] = state[19];
   out_3769333781718526477[20] = state[20];
   out_3769333781718526477[21] = state[21];
   out_3769333781718526477[22] = state[22];
}
void F_fun(double *state, double dt, double *out_1729763283674739079) {
   out_1729763283674739079[0] = 1;
   out_1729763283674739079[1] = 0;
   out_1729763283674739079[2] = 0;
   out_1729763283674739079[3] = 0;
   out_1729763283674739079[4] = 0;
   out_1729763283674739079[5] = 0;
   out_1729763283674739079[6] = dt;
   out_1729763283674739079[7] = 0;
   out_1729763283674739079[8] = 0;
   out_1729763283674739079[9] = 0;
   out_1729763283674739079[10] = 0;
   out_1729763283674739079[11] = 0;
   out_1729763283674739079[12] = 0;
   out_1729763283674739079[13] = 0;
   out_1729763283674739079[14] = 0;
   out_1729763283674739079[15] = 0;
   out_1729763283674739079[16] = 0;
   out_1729763283674739079[17] = 0;
   out_1729763283674739079[18] = 0;
   out_1729763283674739079[19] = 0;
   out_1729763283674739079[20] = 0;
   out_1729763283674739079[21] = 0;
   out_1729763283674739079[22] = 0;
   out_1729763283674739079[23] = 1;
   out_1729763283674739079[24] = 0;
   out_1729763283674739079[25] = 0;
   out_1729763283674739079[26] = 0;
   out_1729763283674739079[27] = 0;
   out_1729763283674739079[28] = 0;
   out_1729763283674739079[29] = dt;
   out_1729763283674739079[30] = 0;
   out_1729763283674739079[31] = 0;
   out_1729763283674739079[32] = 0;
   out_1729763283674739079[33] = 0;
   out_1729763283674739079[34] = 0;
   out_1729763283674739079[35] = 0;
   out_1729763283674739079[36] = 0;
   out_1729763283674739079[37] = 0;
   out_1729763283674739079[38] = 0;
   out_1729763283674739079[39] = 0;
   out_1729763283674739079[40] = 0;
   out_1729763283674739079[41] = 0;
   out_1729763283674739079[42] = 0;
   out_1729763283674739079[43] = 0;
   out_1729763283674739079[44] = 0;
   out_1729763283674739079[45] = 0;
   out_1729763283674739079[46] = 1;
   out_1729763283674739079[47] = 0;
   out_1729763283674739079[48] = 0;
   out_1729763283674739079[49] = 0;
   out_1729763283674739079[50] = 0;
   out_1729763283674739079[51] = 0;
   out_1729763283674739079[52] = dt;
   out_1729763283674739079[53] = 0;
   out_1729763283674739079[54] = 0;
   out_1729763283674739079[55] = 0;
   out_1729763283674739079[56] = 0;
   out_1729763283674739079[57] = 0;
   out_1729763283674739079[58] = 0;
   out_1729763283674739079[59] = 0;
   out_1729763283674739079[60] = 0;
   out_1729763283674739079[61] = 0;
   out_1729763283674739079[62] = 0;
   out_1729763283674739079[63] = 0;
   out_1729763283674739079[64] = 0;
   out_1729763283674739079[65] = 0;
   out_1729763283674739079[66] = 0;
   out_1729763283674739079[67] = 0;
   out_1729763283674739079[68] = 0;
   out_1729763283674739079[69] = 1;
   out_1729763283674739079[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1729763283674739079[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1729763283674739079[72] = 0;
   out_1729763283674739079[73] = 0;
   out_1729763283674739079[74] = 0;
   out_1729763283674739079[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1729763283674739079[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1729763283674739079[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1729763283674739079[78] = 0;
   out_1729763283674739079[79] = 0;
   out_1729763283674739079[80] = 0;
   out_1729763283674739079[81] = 0;
   out_1729763283674739079[82] = 0;
   out_1729763283674739079[83] = 0;
   out_1729763283674739079[84] = 0;
   out_1729763283674739079[85] = 0;
   out_1729763283674739079[86] = 0;
   out_1729763283674739079[87] = 0;
   out_1729763283674739079[88] = 0;
   out_1729763283674739079[89] = 0;
   out_1729763283674739079[90] = 0;
   out_1729763283674739079[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1729763283674739079[92] = 1;
   out_1729763283674739079[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1729763283674739079[94] = 0;
   out_1729763283674739079[95] = 0;
   out_1729763283674739079[96] = 0;
   out_1729763283674739079[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1729763283674739079[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1729763283674739079[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1729763283674739079[100] = 0;
   out_1729763283674739079[101] = 0;
   out_1729763283674739079[102] = 0;
   out_1729763283674739079[103] = 0;
   out_1729763283674739079[104] = 0;
   out_1729763283674739079[105] = 0;
   out_1729763283674739079[106] = 0;
   out_1729763283674739079[107] = 0;
   out_1729763283674739079[108] = 0;
   out_1729763283674739079[109] = 0;
   out_1729763283674739079[110] = 0;
   out_1729763283674739079[111] = 0;
   out_1729763283674739079[112] = 0;
   out_1729763283674739079[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1729763283674739079[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1729763283674739079[115] = 1;
   out_1729763283674739079[116] = 0;
   out_1729763283674739079[117] = 0;
   out_1729763283674739079[118] = 0;
   out_1729763283674739079[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1729763283674739079[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1729763283674739079[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1729763283674739079[122] = 0;
   out_1729763283674739079[123] = 0;
   out_1729763283674739079[124] = 0;
   out_1729763283674739079[125] = 0;
   out_1729763283674739079[126] = 0;
   out_1729763283674739079[127] = 0;
   out_1729763283674739079[128] = 0;
   out_1729763283674739079[129] = 0;
   out_1729763283674739079[130] = 0;
   out_1729763283674739079[131] = 0;
   out_1729763283674739079[132] = 0;
   out_1729763283674739079[133] = 0;
   out_1729763283674739079[134] = 0;
   out_1729763283674739079[135] = 0;
   out_1729763283674739079[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1729763283674739079[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1729763283674739079[138] = 1;
   out_1729763283674739079[139] = 0;
   out_1729763283674739079[140] = 0;
   out_1729763283674739079[141] = 0;
   out_1729763283674739079[142] = 0;
   out_1729763283674739079[143] = 0;
   out_1729763283674739079[144] = 0;
   out_1729763283674739079[145] = 0;
   out_1729763283674739079[146] = 0;
   out_1729763283674739079[147] = 0;
   out_1729763283674739079[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1729763283674739079[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1729763283674739079[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1729763283674739079[151] = 0;
   out_1729763283674739079[152] = 0;
   out_1729763283674739079[153] = 0;
   out_1729763283674739079[154] = 0;
   out_1729763283674739079[155] = 0;
   out_1729763283674739079[156] = 0;
   out_1729763283674739079[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_1729763283674739079[158] = 0;
   out_1729763283674739079[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1729763283674739079[160] = 0;
   out_1729763283674739079[161] = 1;
   out_1729763283674739079[162] = 0;
   out_1729763283674739079[163] = 0;
   out_1729763283674739079[164] = 0;
   out_1729763283674739079[165] = 0;
   out_1729763283674739079[166] = 0;
   out_1729763283674739079[167] = 0;
   out_1729763283674739079[168] = 0;
   out_1729763283674739079[169] = 0;
   out_1729763283674739079[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1729763283674739079[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1729763283674739079[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1729763283674739079[173] = 0;
   out_1729763283674739079[174] = 0;
   out_1729763283674739079[175] = 0;
   out_1729763283674739079[176] = 0;
   out_1729763283674739079[177] = 0;
   out_1729763283674739079[178] = 0;
   out_1729763283674739079[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_1729763283674739079[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1729763283674739079[181] = 0;
   out_1729763283674739079[182] = 0;
   out_1729763283674739079[183] = 0;
   out_1729763283674739079[184] = 1;
   out_1729763283674739079[185] = 0;
   out_1729763283674739079[186] = 0;
   out_1729763283674739079[187] = 0;
   out_1729763283674739079[188] = 0;
   out_1729763283674739079[189] = 0;
   out_1729763283674739079[190] = 0;
   out_1729763283674739079[191] = 0;
   out_1729763283674739079[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1729763283674739079[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1729763283674739079[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1729763283674739079[195] = 0;
   out_1729763283674739079[196] = 0;
   out_1729763283674739079[197] = 0;
   out_1729763283674739079[198] = 0;
   out_1729763283674739079[199] = 0;
   out_1729763283674739079[200] = 0;
   out_1729763283674739079[201] = 0;
   out_1729763283674739079[202] = 0;
   out_1729763283674739079[203] = 0;
   out_1729763283674739079[204] = 0;
   out_1729763283674739079[205] = 0;
   out_1729763283674739079[206] = 0;
   out_1729763283674739079[207] = 1;
   out_1729763283674739079[208] = 0;
   out_1729763283674739079[209] = 0;
   out_1729763283674739079[210] = 0;
   out_1729763283674739079[211] = 0;
   out_1729763283674739079[212] = 0;
   out_1729763283674739079[213] = 0;
   out_1729763283674739079[214] = 0;
   out_1729763283674739079[215] = 0;
   out_1729763283674739079[216] = 0;
   out_1729763283674739079[217] = 0;
   out_1729763283674739079[218] = 0;
   out_1729763283674739079[219] = 0;
   out_1729763283674739079[220] = 0;
   out_1729763283674739079[221] = 0;
   out_1729763283674739079[222] = 0;
   out_1729763283674739079[223] = 0;
   out_1729763283674739079[224] = 0;
   out_1729763283674739079[225] = 0;
   out_1729763283674739079[226] = 0;
   out_1729763283674739079[227] = 0;
   out_1729763283674739079[228] = 0;
   out_1729763283674739079[229] = 0;
   out_1729763283674739079[230] = 1;
   out_1729763283674739079[231] = 0;
   out_1729763283674739079[232] = 0;
   out_1729763283674739079[233] = 0;
   out_1729763283674739079[234] = 0;
   out_1729763283674739079[235] = 0;
   out_1729763283674739079[236] = 0;
   out_1729763283674739079[237] = 0;
   out_1729763283674739079[238] = 0;
   out_1729763283674739079[239] = 0;
   out_1729763283674739079[240] = 0;
   out_1729763283674739079[241] = 0;
   out_1729763283674739079[242] = 0;
   out_1729763283674739079[243] = 0;
   out_1729763283674739079[244] = 0;
   out_1729763283674739079[245] = 0;
   out_1729763283674739079[246] = 0;
   out_1729763283674739079[247] = 0;
   out_1729763283674739079[248] = 0;
   out_1729763283674739079[249] = 0;
   out_1729763283674739079[250] = 0;
   out_1729763283674739079[251] = 0;
   out_1729763283674739079[252] = 0;
   out_1729763283674739079[253] = 1;
   out_1729763283674739079[254] = 0;
   out_1729763283674739079[255] = 0;
   out_1729763283674739079[256] = 0;
   out_1729763283674739079[257] = 0;
   out_1729763283674739079[258] = 0;
   out_1729763283674739079[259] = 0;
   out_1729763283674739079[260] = 0;
   out_1729763283674739079[261] = 0;
   out_1729763283674739079[262] = 0;
   out_1729763283674739079[263] = 0;
   out_1729763283674739079[264] = 0;
   out_1729763283674739079[265] = 0;
   out_1729763283674739079[266] = 0;
   out_1729763283674739079[267] = 0;
   out_1729763283674739079[268] = 0;
   out_1729763283674739079[269] = 0;
   out_1729763283674739079[270] = 0;
   out_1729763283674739079[271] = 0;
   out_1729763283674739079[272] = 0;
   out_1729763283674739079[273] = 0;
   out_1729763283674739079[274] = 0;
   out_1729763283674739079[275] = 0;
   out_1729763283674739079[276] = 1;
   out_1729763283674739079[277] = 0;
   out_1729763283674739079[278] = 0;
   out_1729763283674739079[279] = 0;
   out_1729763283674739079[280] = 0;
   out_1729763283674739079[281] = 0;
   out_1729763283674739079[282] = 0;
   out_1729763283674739079[283] = 0;
   out_1729763283674739079[284] = 0;
   out_1729763283674739079[285] = 0;
   out_1729763283674739079[286] = 0;
   out_1729763283674739079[287] = 0;
   out_1729763283674739079[288] = 0;
   out_1729763283674739079[289] = 0;
   out_1729763283674739079[290] = 0;
   out_1729763283674739079[291] = 0;
   out_1729763283674739079[292] = 0;
   out_1729763283674739079[293] = 0;
   out_1729763283674739079[294] = 0;
   out_1729763283674739079[295] = 0;
   out_1729763283674739079[296] = 0;
   out_1729763283674739079[297] = 0;
   out_1729763283674739079[298] = 0;
   out_1729763283674739079[299] = 1;
   out_1729763283674739079[300] = 0;
   out_1729763283674739079[301] = 0;
   out_1729763283674739079[302] = 0;
   out_1729763283674739079[303] = 0;
   out_1729763283674739079[304] = 0;
   out_1729763283674739079[305] = 0;
   out_1729763283674739079[306] = 0;
   out_1729763283674739079[307] = 0;
   out_1729763283674739079[308] = 0;
   out_1729763283674739079[309] = 0;
   out_1729763283674739079[310] = 0;
   out_1729763283674739079[311] = 0;
   out_1729763283674739079[312] = 0;
   out_1729763283674739079[313] = 0;
   out_1729763283674739079[314] = 0;
   out_1729763283674739079[315] = 0;
   out_1729763283674739079[316] = 0;
   out_1729763283674739079[317] = 0;
   out_1729763283674739079[318] = 0;
   out_1729763283674739079[319] = 0;
   out_1729763283674739079[320] = 0;
   out_1729763283674739079[321] = 0;
   out_1729763283674739079[322] = 1;
   out_1729763283674739079[323] = 0;
   out_1729763283674739079[324] = 0;
   out_1729763283674739079[325] = 0;
   out_1729763283674739079[326] = 0;
   out_1729763283674739079[327] = 0;
   out_1729763283674739079[328] = 0;
   out_1729763283674739079[329] = 0;
   out_1729763283674739079[330] = 0;
   out_1729763283674739079[331] = 0;
   out_1729763283674739079[332] = 0;
   out_1729763283674739079[333] = 0;
   out_1729763283674739079[334] = 0;
   out_1729763283674739079[335] = 0;
   out_1729763283674739079[336] = 0;
   out_1729763283674739079[337] = 0;
   out_1729763283674739079[338] = 0;
   out_1729763283674739079[339] = 0;
   out_1729763283674739079[340] = 0;
   out_1729763283674739079[341] = 0;
   out_1729763283674739079[342] = 0;
   out_1729763283674739079[343] = 0;
   out_1729763283674739079[344] = 0;
   out_1729763283674739079[345] = 1;
   out_1729763283674739079[346] = 0;
   out_1729763283674739079[347] = 0;
   out_1729763283674739079[348] = 0;
   out_1729763283674739079[349] = 0;
   out_1729763283674739079[350] = 0;
   out_1729763283674739079[351] = 0;
   out_1729763283674739079[352] = 0;
   out_1729763283674739079[353] = 0;
   out_1729763283674739079[354] = 0;
   out_1729763283674739079[355] = 0;
   out_1729763283674739079[356] = 0;
   out_1729763283674739079[357] = 0;
   out_1729763283674739079[358] = 0;
   out_1729763283674739079[359] = 0;
   out_1729763283674739079[360] = 0;
   out_1729763283674739079[361] = 0;
   out_1729763283674739079[362] = 0;
   out_1729763283674739079[363] = 0;
   out_1729763283674739079[364] = 0;
   out_1729763283674739079[365] = 0;
   out_1729763283674739079[366] = 0;
   out_1729763283674739079[367] = 0;
   out_1729763283674739079[368] = 1;
   out_1729763283674739079[369] = 0;
   out_1729763283674739079[370] = 0;
   out_1729763283674739079[371] = 0;
   out_1729763283674739079[372] = 0;
   out_1729763283674739079[373] = 0;
   out_1729763283674739079[374] = 0;
   out_1729763283674739079[375] = 0;
   out_1729763283674739079[376] = 0;
   out_1729763283674739079[377] = 0;
   out_1729763283674739079[378] = 0;
   out_1729763283674739079[379] = 0;
   out_1729763283674739079[380] = 0;
   out_1729763283674739079[381] = 0;
   out_1729763283674739079[382] = 0;
   out_1729763283674739079[383] = 0;
   out_1729763283674739079[384] = 0;
   out_1729763283674739079[385] = 0;
   out_1729763283674739079[386] = 0;
   out_1729763283674739079[387] = 0;
   out_1729763283674739079[388] = 0;
   out_1729763283674739079[389] = 0;
   out_1729763283674739079[390] = 0;
   out_1729763283674739079[391] = 1;
   out_1729763283674739079[392] = 0;
   out_1729763283674739079[393] = 0;
   out_1729763283674739079[394] = 0;
   out_1729763283674739079[395] = 0;
   out_1729763283674739079[396] = 0;
   out_1729763283674739079[397] = 0;
   out_1729763283674739079[398] = 0;
   out_1729763283674739079[399] = 0;
   out_1729763283674739079[400] = 0;
   out_1729763283674739079[401] = 0;
   out_1729763283674739079[402] = 0;
   out_1729763283674739079[403] = 0;
   out_1729763283674739079[404] = 0;
   out_1729763283674739079[405] = 0;
   out_1729763283674739079[406] = 0;
   out_1729763283674739079[407] = 0;
   out_1729763283674739079[408] = 0;
   out_1729763283674739079[409] = 0;
   out_1729763283674739079[410] = 0;
   out_1729763283674739079[411] = 0;
   out_1729763283674739079[412] = 0;
   out_1729763283674739079[413] = 0;
   out_1729763283674739079[414] = 1;
   out_1729763283674739079[415] = 0;
   out_1729763283674739079[416] = 0;
   out_1729763283674739079[417] = 0;
   out_1729763283674739079[418] = 0;
   out_1729763283674739079[419] = 0;
   out_1729763283674739079[420] = 0;
   out_1729763283674739079[421] = 0;
   out_1729763283674739079[422] = 0;
   out_1729763283674739079[423] = 0;
   out_1729763283674739079[424] = 0;
   out_1729763283674739079[425] = 0;
   out_1729763283674739079[426] = 0;
   out_1729763283674739079[427] = 0;
   out_1729763283674739079[428] = 0;
   out_1729763283674739079[429] = 0;
   out_1729763283674739079[430] = 0;
   out_1729763283674739079[431] = 0;
   out_1729763283674739079[432] = 0;
   out_1729763283674739079[433] = 0;
   out_1729763283674739079[434] = 0;
   out_1729763283674739079[435] = 0;
   out_1729763283674739079[436] = 0;
   out_1729763283674739079[437] = 1;
   out_1729763283674739079[438] = 0;
   out_1729763283674739079[439] = 0;
   out_1729763283674739079[440] = 0;
   out_1729763283674739079[441] = 0;
   out_1729763283674739079[442] = 0;
   out_1729763283674739079[443] = 0;
   out_1729763283674739079[444] = 0;
   out_1729763283674739079[445] = 0;
   out_1729763283674739079[446] = 0;
   out_1729763283674739079[447] = 0;
   out_1729763283674739079[448] = 0;
   out_1729763283674739079[449] = 0;
   out_1729763283674739079[450] = 0;
   out_1729763283674739079[451] = 0;
   out_1729763283674739079[452] = 0;
   out_1729763283674739079[453] = 0;
   out_1729763283674739079[454] = 0;
   out_1729763283674739079[455] = 0;
   out_1729763283674739079[456] = 0;
   out_1729763283674739079[457] = 0;
   out_1729763283674739079[458] = 0;
   out_1729763283674739079[459] = 0;
   out_1729763283674739079[460] = 1;
   out_1729763283674739079[461] = 0;
   out_1729763283674739079[462] = 0;
   out_1729763283674739079[463] = 0;
   out_1729763283674739079[464] = 0;
   out_1729763283674739079[465] = 0;
   out_1729763283674739079[466] = 0;
   out_1729763283674739079[467] = 0;
   out_1729763283674739079[468] = 0;
   out_1729763283674739079[469] = 0;
   out_1729763283674739079[470] = 0;
   out_1729763283674739079[471] = 0;
   out_1729763283674739079[472] = 0;
   out_1729763283674739079[473] = 0;
   out_1729763283674739079[474] = 0;
   out_1729763283674739079[475] = 0;
   out_1729763283674739079[476] = 0;
   out_1729763283674739079[477] = 0;
   out_1729763283674739079[478] = 0;
   out_1729763283674739079[479] = 0;
   out_1729763283674739079[480] = 0;
   out_1729763283674739079[481] = 0;
   out_1729763283674739079[482] = 0;
   out_1729763283674739079[483] = 1;
}
void h_3(double *state, double *unused, double *out_3353047167857299366) {
   out_3353047167857299366[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_7704284618775886181) {
   out_7704284618775886181[0] = 0;
   out_7704284618775886181[1] = 0;
   out_7704284618775886181[2] = 0;
   out_7704284618775886181[3] = 0;
   out_7704284618775886181[4] = 0;
   out_7704284618775886181[5] = 0;
   out_7704284618775886181[6] = 0;
   out_7704284618775886181[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7704284618775886181[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7704284618775886181[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7704284618775886181[10] = 0;
   out_7704284618775886181[11] = 0;
   out_7704284618775886181[12] = 0;
   out_7704284618775886181[13] = 0;
   out_7704284618775886181[14] = 0;
   out_7704284618775886181[15] = 0;
   out_7704284618775886181[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_7704284618775886181[17] = 0;
   out_7704284618775886181[18] = 0;
   out_7704284618775886181[19] = 0;
   out_7704284618775886181[20] = 0;
   out_7704284618775886181[21] = 0;
   out_7704284618775886181[22] = 0;
}
void h_4(double *state, double *unused, double *out_3731407467059059273) {
   out_3731407467059059273[0] = state[10] + state[13];
   out_3731407467059059273[1] = state[11] + state[14];
   out_3731407467059059273[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3807016261701761401) {
   out_3807016261701761401[0] = 0;
   out_3807016261701761401[1] = 0;
   out_3807016261701761401[2] = 0;
   out_3807016261701761401[3] = 0;
   out_3807016261701761401[4] = 0;
   out_3807016261701761401[5] = 0;
   out_3807016261701761401[6] = 0;
   out_3807016261701761401[7] = 0;
   out_3807016261701761401[8] = 0;
   out_3807016261701761401[9] = 0;
   out_3807016261701761401[10] = 1;
   out_3807016261701761401[11] = 0;
   out_3807016261701761401[12] = 0;
   out_3807016261701761401[13] = 1;
   out_3807016261701761401[14] = 0;
   out_3807016261701761401[15] = 0;
   out_3807016261701761401[16] = 0;
   out_3807016261701761401[17] = 0;
   out_3807016261701761401[18] = 0;
   out_3807016261701761401[19] = 0;
   out_3807016261701761401[20] = 0;
   out_3807016261701761401[21] = 0;
   out_3807016261701761401[22] = 0;
   out_3807016261701761401[23] = 0;
   out_3807016261701761401[24] = 0;
   out_3807016261701761401[25] = 0;
   out_3807016261701761401[26] = 0;
   out_3807016261701761401[27] = 0;
   out_3807016261701761401[28] = 0;
   out_3807016261701761401[29] = 0;
   out_3807016261701761401[30] = 0;
   out_3807016261701761401[31] = 0;
   out_3807016261701761401[32] = 0;
   out_3807016261701761401[33] = 0;
   out_3807016261701761401[34] = 1;
   out_3807016261701761401[35] = 0;
   out_3807016261701761401[36] = 0;
   out_3807016261701761401[37] = 1;
   out_3807016261701761401[38] = 0;
   out_3807016261701761401[39] = 0;
   out_3807016261701761401[40] = 0;
   out_3807016261701761401[41] = 0;
   out_3807016261701761401[42] = 0;
   out_3807016261701761401[43] = 0;
   out_3807016261701761401[44] = 0;
   out_3807016261701761401[45] = 0;
   out_3807016261701761401[46] = 0;
   out_3807016261701761401[47] = 0;
   out_3807016261701761401[48] = 0;
   out_3807016261701761401[49] = 0;
   out_3807016261701761401[50] = 0;
   out_3807016261701761401[51] = 0;
   out_3807016261701761401[52] = 0;
   out_3807016261701761401[53] = 0;
   out_3807016261701761401[54] = 0;
   out_3807016261701761401[55] = 0;
   out_3807016261701761401[56] = 0;
   out_3807016261701761401[57] = 0;
   out_3807016261701761401[58] = 1;
   out_3807016261701761401[59] = 0;
   out_3807016261701761401[60] = 0;
   out_3807016261701761401[61] = 1;
   out_3807016261701761401[62] = 0;
   out_3807016261701761401[63] = 0;
   out_3807016261701761401[64] = 0;
   out_3807016261701761401[65] = 0;
   out_3807016261701761401[66] = 0;
   out_3807016261701761401[67] = 0;
   out_3807016261701761401[68] = 0;
}
void h_9(double *state, double *unused, double *out_3175977904054397406) {
   out_3175977904054397406[0] = state[10];
   out_3175977904054397406[1] = state[11];
   out_3175977904054397406[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6129521805572617371) {
   out_6129521805572617371[0] = 0;
   out_6129521805572617371[1] = 0;
   out_6129521805572617371[2] = 0;
   out_6129521805572617371[3] = 0;
   out_6129521805572617371[4] = 0;
   out_6129521805572617371[5] = 0;
   out_6129521805572617371[6] = 0;
   out_6129521805572617371[7] = 0;
   out_6129521805572617371[8] = 0;
   out_6129521805572617371[9] = 0;
   out_6129521805572617371[10] = 1;
   out_6129521805572617371[11] = 0;
   out_6129521805572617371[12] = 0;
   out_6129521805572617371[13] = 0;
   out_6129521805572617371[14] = 0;
   out_6129521805572617371[15] = 0;
   out_6129521805572617371[16] = 0;
   out_6129521805572617371[17] = 0;
   out_6129521805572617371[18] = 0;
   out_6129521805572617371[19] = 0;
   out_6129521805572617371[20] = 0;
   out_6129521805572617371[21] = 0;
   out_6129521805572617371[22] = 0;
   out_6129521805572617371[23] = 0;
   out_6129521805572617371[24] = 0;
   out_6129521805572617371[25] = 0;
   out_6129521805572617371[26] = 0;
   out_6129521805572617371[27] = 0;
   out_6129521805572617371[28] = 0;
   out_6129521805572617371[29] = 0;
   out_6129521805572617371[30] = 0;
   out_6129521805572617371[31] = 0;
   out_6129521805572617371[32] = 0;
   out_6129521805572617371[33] = 0;
   out_6129521805572617371[34] = 1;
   out_6129521805572617371[35] = 0;
   out_6129521805572617371[36] = 0;
   out_6129521805572617371[37] = 0;
   out_6129521805572617371[38] = 0;
   out_6129521805572617371[39] = 0;
   out_6129521805572617371[40] = 0;
   out_6129521805572617371[41] = 0;
   out_6129521805572617371[42] = 0;
   out_6129521805572617371[43] = 0;
   out_6129521805572617371[44] = 0;
   out_6129521805572617371[45] = 0;
   out_6129521805572617371[46] = 0;
   out_6129521805572617371[47] = 0;
   out_6129521805572617371[48] = 0;
   out_6129521805572617371[49] = 0;
   out_6129521805572617371[50] = 0;
   out_6129521805572617371[51] = 0;
   out_6129521805572617371[52] = 0;
   out_6129521805572617371[53] = 0;
   out_6129521805572617371[54] = 0;
   out_6129521805572617371[55] = 0;
   out_6129521805572617371[56] = 0;
   out_6129521805572617371[57] = 0;
   out_6129521805572617371[58] = 1;
   out_6129521805572617371[59] = 0;
   out_6129521805572617371[60] = 0;
   out_6129521805572617371[61] = 0;
   out_6129521805572617371[62] = 0;
   out_6129521805572617371[63] = 0;
   out_6129521805572617371[64] = 0;
   out_6129521805572617371[65] = 0;
   out_6129521805572617371[66] = 0;
   out_6129521805572617371[67] = 0;
   out_6129521805572617371[68] = 0;
}
void h_10(double *state, double *unused, double *out_6548272351265629293) {
   out_6548272351265629293[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_6548272351265629293[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_6548272351265629293[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_1781433089232890635) {
   out_1781433089232890635[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1781433089232890635[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1781433089232890635[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1781433089232890635[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1781433089232890635[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1781433089232890635[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1781433089232890635[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1781433089232890635[7] = 0;
   out_1781433089232890635[8] = 0;
   out_1781433089232890635[9] = 0;
   out_1781433089232890635[10] = 0;
   out_1781433089232890635[11] = 0;
   out_1781433089232890635[12] = 0;
   out_1781433089232890635[13] = 0;
   out_1781433089232890635[14] = 0;
   out_1781433089232890635[15] = 0;
   out_1781433089232890635[16] = 0;
   out_1781433089232890635[17] = 1;
   out_1781433089232890635[18] = 0;
   out_1781433089232890635[19] = 0;
   out_1781433089232890635[20] = 0;
   out_1781433089232890635[21] = 0;
   out_1781433089232890635[22] = 0;
   out_1781433089232890635[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1781433089232890635[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1781433089232890635[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1781433089232890635[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1781433089232890635[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1781433089232890635[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1781433089232890635[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1781433089232890635[30] = 0;
   out_1781433089232890635[31] = 0;
   out_1781433089232890635[32] = 0;
   out_1781433089232890635[33] = 0;
   out_1781433089232890635[34] = 0;
   out_1781433089232890635[35] = 0;
   out_1781433089232890635[36] = 0;
   out_1781433089232890635[37] = 0;
   out_1781433089232890635[38] = 0;
   out_1781433089232890635[39] = 0;
   out_1781433089232890635[40] = 0;
   out_1781433089232890635[41] = 1;
   out_1781433089232890635[42] = 0;
   out_1781433089232890635[43] = 0;
   out_1781433089232890635[44] = 0;
   out_1781433089232890635[45] = 0;
   out_1781433089232890635[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1781433089232890635[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1781433089232890635[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1781433089232890635[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1781433089232890635[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1781433089232890635[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1781433089232890635[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1781433089232890635[53] = 0;
   out_1781433089232890635[54] = 0;
   out_1781433089232890635[55] = 0;
   out_1781433089232890635[56] = 0;
   out_1781433089232890635[57] = 0;
   out_1781433089232890635[58] = 0;
   out_1781433089232890635[59] = 0;
   out_1781433089232890635[60] = 0;
   out_1781433089232890635[61] = 0;
   out_1781433089232890635[62] = 0;
   out_1781433089232890635[63] = 0;
   out_1781433089232890635[64] = 0;
   out_1781433089232890635[65] = 1;
   out_1781433089232890635[66] = 0;
   out_1781433089232890635[67] = 0;
   out_1781433089232890635[68] = 0;
}
void h_12(double *state, double *unused, double *out_4943029477807843125) {
   out_4943029477807843125[0] = state[0];
   out_4943029477807843125[1] = state[1];
   out_4943029477807843125[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5913571773440970970) {
   out_5913571773440970970[0] = 1;
   out_5913571773440970970[1] = 0;
   out_5913571773440970970[2] = 0;
   out_5913571773440970970[3] = 0;
   out_5913571773440970970[4] = 0;
   out_5913571773440970970[5] = 0;
   out_5913571773440970970[6] = 0;
   out_5913571773440970970[7] = 0;
   out_5913571773440970970[8] = 0;
   out_5913571773440970970[9] = 0;
   out_5913571773440970970[10] = 0;
   out_5913571773440970970[11] = 0;
   out_5913571773440970970[12] = 0;
   out_5913571773440970970[13] = 0;
   out_5913571773440970970[14] = 0;
   out_5913571773440970970[15] = 0;
   out_5913571773440970970[16] = 0;
   out_5913571773440970970[17] = 0;
   out_5913571773440970970[18] = 0;
   out_5913571773440970970[19] = 0;
   out_5913571773440970970[20] = 0;
   out_5913571773440970970[21] = 0;
   out_5913571773440970970[22] = 0;
   out_5913571773440970970[23] = 0;
   out_5913571773440970970[24] = 1;
   out_5913571773440970970[25] = 0;
   out_5913571773440970970[26] = 0;
   out_5913571773440970970[27] = 0;
   out_5913571773440970970[28] = 0;
   out_5913571773440970970[29] = 0;
   out_5913571773440970970[30] = 0;
   out_5913571773440970970[31] = 0;
   out_5913571773440970970[32] = 0;
   out_5913571773440970970[33] = 0;
   out_5913571773440970970[34] = 0;
   out_5913571773440970970[35] = 0;
   out_5913571773440970970[36] = 0;
   out_5913571773440970970[37] = 0;
   out_5913571773440970970[38] = 0;
   out_5913571773440970970[39] = 0;
   out_5913571773440970970[40] = 0;
   out_5913571773440970970[41] = 0;
   out_5913571773440970970[42] = 0;
   out_5913571773440970970[43] = 0;
   out_5913571773440970970[44] = 0;
   out_5913571773440970970[45] = 0;
   out_5913571773440970970[46] = 0;
   out_5913571773440970970[47] = 0;
   out_5913571773440970970[48] = 1;
   out_5913571773440970970[49] = 0;
   out_5913571773440970970[50] = 0;
   out_5913571773440970970[51] = 0;
   out_5913571773440970970[52] = 0;
   out_5913571773440970970[53] = 0;
   out_5913571773440970970[54] = 0;
   out_5913571773440970970[55] = 0;
   out_5913571773440970970[56] = 0;
   out_5913571773440970970[57] = 0;
   out_5913571773440970970[58] = 0;
   out_5913571773440970970[59] = 0;
   out_5913571773440970970[60] = 0;
   out_5913571773440970970[61] = 0;
   out_5913571773440970970[62] = 0;
   out_5913571773440970970[63] = 0;
   out_5913571773440970970[64] = 0;
   out_5913571773440970970[65] = 0;
   out_5913571773440970970[66] = 0;
   out_5913571773440970970[67] = 0;
   out_5913571773440970970[68] = 0;
}
void h_31(double *state, double *unused, double *out_6070517376616722132) {
   out_6070517376616722132[0] = state[7];
   out_6070517376616722132[1] = state[8];
   out_6070517376616722132[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3238481998297551149) {
   out_3238481998297551149[0] = 0;
   out_3238481998297551149[1] = 0;
   out_3238481998297551149[2] = 0;
   out_3238481998297551149[3] = 0;
   out_3238481998297551149[4] = 0;
   out_3238481998297551149[5] = 0;
   out_3238481998297551149[6] = 0;
   out_3238481998297551149[7] = 1;
   out_3238481998297551149[8] = 0;
   out_3238481998297551149[9] = 0;
   out_3238481998297551149[10] = 0;
   out_3238481998297551149[11] = 0;
   out_3238481998297551149[12] = 0;
   out_3238481998297551149[13] = 0;
   out_3238481998297551149[14] = 0;
   out_3238481998297551149[15] = 0;
   out_3238481998297551149[16] = 0;
   out_3238481998297551149[17] = 0;
   out_3238481998297551149[18] = 0;
   out_3238481998297551149[19] = 0;
   out_3238481998297551149[20] = 0;
   out_3238481998297551149[21] = 0;
   out_3238481998297551149[22] = 0;
   out_3238481998297551149[23] = 0;
   out_3238481998297551149[24] = 0;
   out_3238481998297551149[25] = 0;
   out_3238481998297551149[26] = 0;
   out_3238481998297551149[27] = 0;
   out_3238481998297551149[28] = 0;
   out_3238481998297551149[29] = 0;
   out_3238481998297551149[30] = 0;
   out_3238481998297551149[31] = 1;
   out_3238481998297551149[32] = 0;
   out_3238481998297551149[33] = 0;
   out_3238481998297551149[34] = 0;
   out_3238481998297551149[35] = 0;
   out_3238481998297551149[36] = 0;
   out_3238481998297551149[37] = 0;
   out_3238481998297551149[38] = 0;
   out_3238481998297551149[39] = 0;
   out_3238481998297551149[40] = 0;
   out_3238481998297551149[41] = 0;
   out_3238481998297551149[42] = 0;
   out_3238481998297551149[43] = 0;
   out_3238481998297551149[44] = 0;
   out_3238481998297551149[45] = 0;
   out_3238481998297551149[46] = 0;
   out_3238481998297551149[47] = 0;
   out_3238481998297551149[48] = 0;
   out_3238481998297551149[49] = 0;
   out_3238481998297551149[50] = 0;
   out_3238481998297551149[51] = 0;
   out_3238481998297551149[52] = 0;
   out_3238481998297551149[53] = 0;
   out_3238481998297551149[54] = 0;
   out_3238481998297551149[55] = 1;
   out_3238481998297551149[56] = 0;
   out_3238481998297551149[57] = 0;
   out_3238481998297551149[58] = 0;
   out_3238481998297551149[59] = 0;
   out_3238481998297551149[60] = 0;
   out_3238481998297551149[61] = 0;
   out_3238481998297551149[62] = 0;
   out_3238481998297551149[63] = 0;
   out_3238481998297551149[64] = 0;
   out_3238481998297551149[65] = 0;
   out_3238481998297551149[66] = 0;
   out_3238481998297551149[67] = 0;
   out_3238481998297551149[68] = 0;
}
void h_32(double *state, double *unused, double *out_5058031754322652356) {
   out_5058031754322652356[0] = state[3];
   out_5058031754322652356[1] = state[4];
   out_5058031754322652356[2] = state[5];
   out_5058031754322652356[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1287980276649799502) {
   out_1287980276649799502[0] = 0;
   out_1287980276649799502[1] = 0;
   out_1287980276649799502[2] = 0;
   out_1287980276649799502[3] = 1;
   out_1287980276649799502[4] = 0;
   out_1287980276649799502[5] = 0;
   out_1287980276649799502[6] = 0;
   out_1287980276649799502[7] = 0;
   out_1287980276649799502[8] = 0;
   out_1287980276649799502[9] = 0;
   out_1287980276649799502[10] = 0;
   out_1287980276649799502[11] = 0;
   out_1287980276649799502[12] = 0;
   out_1287980276649799502[13] = 0;
   out_1287980276649799502[14] = 0;
   out_1287980276649799502[15] = 0;
   out_1287980276649799502[16] = 0;
   out_1287980276649799502[17] = 0;
   out_1287980276649799502[18] = 0;
   out_1287980276649799502[19] = 0;
   out_1287980276649799502[20] = 0;
   out_1287980276649799502[21] = 0;
   out_1287980276649799502[22] = 0;
   out_1287980276649799502[23] = 0;
   out_1287980276649799502[24] = 0;
   out_1287980276649799502[25] = 0;
   out_1287980276649799502[26] = 0;
   out_1287980276649799502[27] = 1;
   out_1287980276649799502[28] = 0;
   out_1287980276649799502[29] = 0;
   out_1287980276649799502[30] = 0;
   out_1287980276649799502[31] = 0;
   out_1287980276649799502[32] = 0;
   out_1287980276649799502[33] = 0;
   out_1287980276649799502[34] = 0;
   out_1287980276649799502[35] = 0;
   out_1287980276649799502[36] = 0;
   out_1287980276649799502[37] = 0;
   out_1287980276649799502[38] = 0;
   out_1287980276649799502[39] = 0;
   out_1287980276649799502[40] = 0;
   out_1287980276649799502[41] = 0;
   out_1287980276649799502[42] = 0;
   out_1287980276649799502[43] = 0;
   out_1287980276649799502[44] = 0;
   out_1287980276649799502[45] = 0;
   out_1287980276649799502[46] = 0;
   out_1287980276649799502[47] = 0;
   out_1287980276649799502[48] = 0;
   out_1287980276649799502[49] = 0;
   out_1287980276649799502[50] = 0;
   out_1287980276649799502[51] = 1;
   out_1287980276649799502[52] = 0;
   out_1287980276649799502[53] = 0;
   out_1287980276649799502[54] = 0;
   out_1287980276649799502[55] = 0;
   out_1287980276649799502[56] = 0;
   out_1287980276649799502[57] = 0;
   out_1287980276649799502[58] = 0;
   out_1287980276649799502[59] = 0;
   out_1287980276649799502[60] = 0;
   out_1287980276649799502[61] = 0;
   out_1287980276649799502[62] = 0;
   out_1287980276649799502[63] = 0;
   out_1287980276649799502[64] = 0;
   out_1287980276649799502[65] = 0;
   out_1287980276649799502[66] = 0;
   out_1287980276649799502[67] = 0;
   out_1287980276649799502[68] = 0;
   out_1287980276649799502[69] = 0;
   out_1287980276649799502[70] = 0;
   out_1287980276649799502[71] = 0;
   out_1287980276649799502[72] = 0;
   out_1287980276649799502[73] = 0;
   out_1287980276649799502[74] = 0;
   out_1287980276649799502[75] = 1;
   out_1287980276649799502[76] = 0;
   out_1287980276649799502[77] = 0;
   out_1287980276649799502[78] = 0;
   out_1287980276649799502[79] = 0;
   out_1287980276649799502[80] = 0;
   out_1287980276649799502[81] = 0;
   out_1287980276649799502[82] = 0;
   out_1287980276649799502[83] = 0;
   out_1287980276649799502[84] = 0;
   out_1287980276649799502[85] = 0;
   out_1287980276649799502[86] = 0;
   out_1287980276649799502[87] = 0;
   out_1287980276649799502[88] = 0;
   out_1287980276649799502[89] = 0;
   out_1287980276649799502[90] = 0;
   out_1287980276649799502[91] = 0;
}
void h_13(double *state, double *unused, double *out_1127049720547567833) {
   out_1127049720547567833[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1127049720547567833[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1127049720547567833[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_9000465482903538594) {
   out_9000465482903538594[0] = 0;
   out_9000465482903538594[1] = 0;
   out_9000465482903538594[2] = 0;
   out_9000465482903538594[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9000465482903538594[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9000465482903538594[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_9000465482903538594[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9000465482903538594[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_9000465482903538594[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_9000465482903538594[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_9000465482903538594[10] = 0;
   out_9000465482903538594[11] = 0;
   out_9000465482903538594[12] = 0;
   out_9000465482903538594[13] = 0;
   out_9000465482903538594[14] = 0;
   out_9000465482903538594[15] = 0;
   out_9000465482903538594[16] = 0;
   out_9000465482903538594[17] = 0;
   out_9000465482903538594[18] = 0;
   out_9000465482903538594[19] = 0;
   out_9000465482903538594[20] = 0;
   out_9000465482903538594[21] = 0;
   out_9000465482903538594[22] = 0;
   out_9000465482903538594[23] = 0;
   out_9000465482903538594[24] = 0;
   out_9000465482903538594[25] = 0;
   out_9000465482903538594[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9000465482903538594[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9000465482903538594[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9000465482903538594[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_9000465482903538594[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_9000465482903538594[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_9000465482903538594[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_9000465482903538594[33] = 0;
   out_9000465482903538594[34] = 0;
   out_9000465482903538594[35] = 0;
   out_9000465482903538594[36] = 0;
   out_9000465482903538594[37] = 0;
   out_9000465482903538594[38] = 0;
   out_9000465482903538594[39] = 0;
   out_9000465482903538594[40] = 0;
   out_9000465482903538594[41] = 0;
   out_9000465482903538594[42] = 0;
   out_9000465482903538594[43] = 0;
   out_9000465482903538594[44] = 0;
   out_9000465482903538594[45] = 0;
   out_9000465482903538594[46] = 0;
   out_9000465482903538594[47] = 0;
   out_9000465482903538594[48] = 0;
   out_9000465482903538594[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9000465482903538594[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_9000465482903538594[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9000465482903538594[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9000465482903538594[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_9000465482903538594[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_9000465482903538594[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_9000465482903538594[56] = 0;
   out_9000465482903538594[57] = 0;
   out_9000465482903538594[58] = 0;
   out_9000465482903538594[59] = 0;
   out_9000465482903538594[60] = 0;
   out_9000465482903538594[61] = 0;
   out_9000465482903538594[62] = 0;
   out_9000465482903538594[63] = 0;
   out_9000465482903538594[64] = 0;
   out_9000465482903538594[65] = 0;
   out_9000465482903538594[66] = 0;
   out_9000465482903538594[67] = 0;
   out_9000465482903538594[68] = 0;
}
void h_14(double *state, double *unused, double *out_3175977904054397406) {
   out_3175977904054397406[0] = state[10];
   out_3175977904054397406[1] = state[11];
   out_3175977904054397406[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6129521805572617371) {
   out_6129521805572617371[0] = 0;
   out_6129521805572617371[1] = 0;
   out_6129521805572617371[2] = 0;
   out_6129521805572617371[3] = 0;
   out_6129521805572617371[4] = 0;
   out_6129521805572617371[5] = 0;
   out_6129521805572617371[6] = 0;
   out_6129521805572617371[7] = 0;
   out_6129521805572617371[8] = 0;
   out_6129521805572617371[9] = 0;
   out_6129521805572617371[10] = 1;
   out_6129521805572617371[11] = 0;
   out_6129521805572617371[12] = 0;
   out_6129521805572617371[13] = 0;
   out_6129521805572617371[14] = 0;
   out_6129521805572617371[15] = 0;
   out_6129521805572617371[16] = 0;
   out_6129521805572617371[17] = 0;
   out_6129521805572617371[18] = 0;
   out_6129521805572617371[19] = 0;
   out_6129521805572617371[20] = 0;
   out_6129521805572617371[21] = 0;
   out_6129521805572617371[22] = 0;
   out_6129521805572617371[23] = 0;
   out_6129521805572617371[24] = 0;
   out_6129521805572617371[25] = 0;
   out_6129521805572617371[26] = 0;
   out_6129521805572617371[27] = 0;
   out_6129521805572617371[28] = 0;
   out_6129521805572617371[29] = 0;
   out_6129521805572617371[30] = 0;
   out_6129521805572617371[31] = 0;
   out_6129521805572617371[32] = 0;
   out_6129521805572617371[33] = 0;
   out_6129521805572617371[34] = 1;
   out_6129521805572617371[35] = 0;
   out_6129521805572617371[36] = 0;
   out_6129521805572617371[37] = 0;
   out_6129521805572617371[38] = 0;
   out_6129521805572617371[39] = 0;
   out_6129521805572617371[40] = 0;
   out_6129521805572617371[41] = 0;
   out_6129521805572617371[42] = 0;
   out_6129521805572617371[43] = 0;
   out_6129521805572617371[44] = 0;
   out_6129521805572617371[45] = 0;
   out_6129521805572617371[46] = 0;
   out_6129521805572617371[47] = 0;
   out_6129521805572617371[48] = 0;
   out_6129521805572617371[49] = 0;
   out_6129521805572617371[50] = 0;
   out_6129521805572617371[51] = 0;
   out_6129521805572617371[52] = 0;
   out_6129521805572617371[53] = 0;
   out_6129521805572617371[54] = 0;
   out_6129521805572617371[55] = 0;
   out_6129521805572617371[56] = 0;
   out_6129521805572617371[57] = 0;
   out_6129521805572617371[58] = 1;
   out_6129521805572617371[59] = 0;
   out_6129521805572617371[60] = 0;
   out_6129521805572617371[61] = 0;
   out_6129521805572617371[62] = 0;
   out_6129521805572617371[63] = 0;
   out_6129521805572617371[64] = 0;
   out_6129521805572617371[65] = 0;
   out_6129521805572617371[66] = 0;
   out_6129521805572617371[67] = 0;
   out_6129521805572617371[68] = 0;
}
void h_19(double *state, double *unused, double *out_2309558163756555640) {
   out_2309558163756555640[0] = state[20];
   out_2309558163756555640[1] = state[21];
   out_2309558163756555640[2] = state[22];
}
void H_19(double *state, double *unused, double *out_7884542417034503064) {
   out_7884542417034503064[0] = 0;
   out_7884542417034503064[1] = 0;
   out_7884542417034503064[2] = 0;
   out_7884542417034503064[3] = 0;
   out_7884542417034503064[4] = 0;
   out_7884542417034503064[5] = 0;
   out_7884542417034503064[6] = 0;
   out_7884542417034503064[7] = 0;
   out_7884542417034503064[8] = 0;
   out_7884542417034503064[9] = 0;
   out_7884542417034503064[10] = 0;
   out_7884542417034503064[11] = 0;
   out_7884542417034503064[12] = 0;
   out_7884542417034503064[13] = 0;
   out_7884542417034503064[14] = 0;
   out_7884542417034503064[15] = 0;
   out_7884542417034503064[16] = 0;
   out_7884542417034503064[17] = 0;
   out_7884542417034503064[18] = 0;
   out_7884542417034503064[19] = 0;
   out_7884542417034503064[20] = 1;
   out_7884542417034503064[21] = 0;
   out_7884542417034503064[22] = 0;
   out_7884542417034503064[23] = 0;
   out_7884542417034503064[24] = 0;
   out_7884542417034503064[25] = 0;
   out_7884542417034503064[26] = 0;
   out_7884542417034503064[27] = 0;
   out_7884542417034503064[28] = 0;
   out_7884542417034503064[29] = 0;
   out_7884542417034503064[30] = 0;
   out_7884542417034503064[31] = 0;
   out_7884542417034503064[32] = 0;
   out_7884542417034503064[33] = 0;
   out_7884542417034503064[34] = 0;
   out_7884542417034503064[35] = 0;
   out_7884542417034503064[36] = 0;
   out_7884542417034503064[37] = 0;
   out_7884542417034503064[38] = 0;
   out_7884542417034503064[39] = 0;
   out_7884542417034503064[40] = 0;
   out_7884542417034503064[41] = 0;
   out_7884542417034503064[42] = 0;
   out_7884542417034503064[43] = 0;
   out_7884542417034503064[44] = 1;
   out_7884542417034503064[45] = 0;
   out_7884542417034503064[46] = 0;
   out_7884542417034503064[47] = 0;
   out_7884542417034503064[48] = 0;
   out_7884542417034503064[49] = 0;
   out_7884542417034503064[50] = 0;
   out_7884542417034503064[51] = 0;
   out_7884542417034503064[52] = 0;
   out_7884542417034503064[53] = 0;
   out_7884542417034503064[54] = 0;
   out_7884542417034503064[55] = 0;
   out_7884542417034503064[56] = 0;
   out_7884542417034503064[57] = 0;
   out_7884542417034503064[58] = 0;
   out_7884542417034503064[59] = 0;
   out_7884542417034503064[60] = 0;
   out_7884542417034503064[61] = 0;
   out_7884542417034503064[62] = 0;
   out_7884542417034503064[63] = 0;
   out_7884542417034503064[64] = 0;
   out_7884542417034503064[65] = 0;
   out_7884542417034503064[66] = 0;
   out_7884542417034503064[67] = 0;
   out_7884542417034503064[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_2201508260629983479) {
  H(in_vec, out_2201508260629983479);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3850416414583513383) {
  err_fun(nom_x, delta_x, out_3850416414583513383);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1892947755982964602) {
  inv_err_fun(nom_x, true_x, out_1892947755982964602);
}
void live_H_mod_fun(double *state, double *out_7780851748543260142) {
  H_mod_fun(state, out_7780851748543260142);
}
void live_f_fun(double *state, double dt, double *out_3769333781718526477) {
  f_fun(state,  dt, out_3769333781718526477);
}
void live_F_fun(double *state, double dt, double *out_1729763283674739079) {
  F_fun(state,  dt, out_1729763283674739079);
}
void live_h_3(double *state, double *unused, double *out_3353047167857299366) {
  h_3(state, unused, out_3353047167857299366);
}
void live_H_3(double *state, double *unused, double *out_7704284618775886181) {
  H_3(state, unused, out_7704284618775886181);
}
void live_h_4(double *state, double *unused, double *out_3731407467059059273) {
  h_4(state, unused, out_3731407467059059273);
}
void live_H_4(double *state, double *unused, double *out_3807016261701761401) {
  H_4(state, unused, out_3807016261701761401);
}
void live_h_9(double *state, double *unused, double *out_3175977904054397406) {
  h_9(state, unused, out_3175977904054397406);
}
void live_H_9(double *state, double *unused, double *out_6129521805572617371) {
  H_9(state, unused, out_6129521805572617371);
}
void live_h_10(double *state, double *unused, double *out_6548272351265629293) {
  h_10(state, unused, out_6548272351265629293);
}
void live_H_10(double *state, double *unused, double *out_1781433089232890635) {
  H_10(state, unused, out_1781433089232890635);
}
void live_h_12(double *state, double *unused, double *out_4943029477807843125) {
  h_12(state, unused, out_4943029477807843125);
}
void live_H_12(double *state, double *unused, double *out_5913571773440970970) {
  H_12(state, unused, out_5913571773440970970);
}
void live_h_31(double *state, double *unused, double *out_6070517376616722132) {
  h_31(state, unused, out_6070517376616722132);
}
void live_H_31(double *state, double *unused, double *out_3238481998297551149) {
  H_31(state, unused, out_3238481998297551149);
}
void live_h_32(double *state, double *unused, double *out_5058031754322652356) {
  h_32(state, unused, out_5058031754322652356);
}
void live_H_32(double *state, double *unused, double *out_1287980276649799502) {
  H_32(state, unused, out_1287980276649799502);
}
void live_h_13(double *state, double *unused, double *out_1127049720547567833) {
  h_13(state, unused, out_1127049720547567833);
}
void live_H_13(double *state, double *unused, double *out_9000465482903538594) {
  H_13(state, unused, out_9000465482903538594);
}
void live_h_14(double *state, double *unused, double *out_3175977904054397406) {
  h_14(state, unused, out_3175977904054397406);
}
void live_H_14(double *state, double *unused, double *out_6129521805572617371) {
  H_14(state, unused, out_6129521805572617371);
}
void live_h_19(double *state, double *unused, double *out_2309558163756555640) {
  h_19(state, unused, out_2309558163756555640);
}
void live_H_19(double *state, double *unused, double *out_7884542417034503064) {
  H_19(state, unused, out_7884542417034503064);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
